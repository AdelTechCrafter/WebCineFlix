Nom du web service:AddComment
URL du web service:/AddComment
Description du service:permet d'ajouter un commentaire
Paramètres en entrée:key + text
Format de sortie:JSON->{}
Exemple de sortie:{},{"Erreur 1002:l'utilisateur n'est pas connecté"}
Erreurs possibles:user inexistant/SQL erreur/ JSON erreur
Avancement du Service: Servlet implémentée, cependant le script javascript qui lance l'ajout ne fonctionne pas
Classes JAVA en rapport avec le Web service:BD/ErrorJSON.java/ToolMessage.java


Nom du web service:AddFriend
URL du web service:/AddFriend
Description du service:permet d'ajouter un ami
Paramètres en entrée: key + id_friend
Format de sortie:JSON->{}
Exemple de sortie:{},{"Erreur 1000:user inexistant"}
Erreurs possibles:user inexistant/SQL erreur/ JSON erreur
Avancement du Service: Servlet OK
Classes JAVA en rapport avec le Web service:BD/ErrorJSON.java/ToolFriend.java/ToolUser.java


Nom du web service:CreateUser
URL du web service:/CreateUser
Description du service:permet de créer un nouvel utilisateur
Paramètres en entrée:prenom + nom + login + password
Format de sortie:JSON->{}
Exemple de sortie:{},{"Erreur 1001:login déjà existant"}
Erreurs possibles:login inexistant/SQL erreur/ JSon erreur
Avancement du Service:Servlet OK
Classes JAVA en rapport avec le Web service:BD/ErrorJSON.java/ToolUser.java


Nom du web service:Login
URL du web service:/Login
Description du service:permet de connecter user et de récupérer la clé d'authentification
Paramètres en entrée:login+password
Format de sortie:JSON->{id,login,key}
Exemple de sortie:{3415266,adel,MGFFM23456F4GF4GF56G4F4GF56G4FG5},{"Erreur 1000:user inexistant dans la base de donnée SQL"}
Erreurs possibles:login inexistant/SQL erreur/ JSON erreur
Avancement du Service:Servlet OK
Classes JAVA en rapport avec le Web service:BD/ErrorJSON.java/ToolUser.java


Nom du web service:Logout
URL du web service:/Logout
Description du service:permet de se déconnecter(enlève le n-uplet dans la table connexion)
Paramètres en entrée:key
Format de sortie:JSON->{}
Exemple de sortie:{},{"Erreur 1002:l'utilisateur n'est pas connecté "}
Erreurs possibles:user pas connecté/SQL erreur/ JSON erreur
Avancement du Service:Servlet OK
Classes JAVA en rapport avec le Web service:BD/ErrorJSON.java/ToolUser.java

Nom du web service:RemoveFriend
URL du web service:/RemoveFriend
Description du service:permet de supprimer un ami
Paramètres en entrée: key + id_friend
Format de sortie:JSON->{}
Exemple de sortie:{},{"Erreur 1000:user inexistant"}
Erreurs possibles:user inexistant/SQL erreur/ JSON erreur
Avancement du Service:Servlet OK
Classes JAVA en rapport avec le Web service:BD/ErrorJSON.java/ToolFriend.java

Nom du web service:Search
URL du web service:/Search
Description du service: permet de rechercher les messages envoyés à un ami
Paramètres en entrée: key + query + friends
Format de sortie:JSON->{Décrit lors du TD 4}
Exemple de sortie:{},{"Erreur 1000:user inexistant"}
Erreurs possibles:user inexistant/SQL erreur/ JSON erreur
Avancement du Service:Servlet pas implémenté
Classes JAVA en rapport avec le Web service:BD/ErrorJSON.java/ToolUser.java
Informations complémentaires: Search n'a pas été implémenté car je n'ai pas réussi à lister les messages envoyés par un utilisateur
